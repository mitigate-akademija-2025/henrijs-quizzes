<% kind = f.object.type.presence || "ChoiceQuestion" %>
<% is_text = (kind == "TextQuestion") %>
<% q_index = f.index || "NEW_Q" %>
<% kind_label = is_text ? "Text" : "MCQ" %>

<% pill_classes = is_text ?
  "bg-violet-50 text-violet-700 ring-violet-200" :
  "bg-blue-50 text-blue-700 ring-blue-200" %>

<% accent = is_text ?
  "from-violet-500/25 via-fuchsia-500/20 to-pink-500/20" :
  "from-sky-500/25 via-cyan-500/20 to-blue-500/20" %>

<div data-question
     data-persisted="<%= f.object.persisted? %>"
     data-question-index="<%= q_index %>"
     data-option-index="<%= f.object.options.size %>"
     class="relative overflow-hidden w-full rounded-2xl border border-gray-200/70 bg-white/80 px-3 py-3 sm:px-4 sm:py-4 shadow-sm transition hover:shadow-md backdrop-blur supports-[backdrop-filter]:bg-white/60">

  <!-- subtle accents -->
  <div class="pointer-events-none absolute inset-x-0 top-0 h-px bg-gradient-to-r from-blue-500/40 via-cyan-500/40 to-violet-500/40"></div>
  <div class="pointer-events-none absolute -left-px inset-y-0 w-1 rounded-l-2xl bg-gradient-to-b <%= accent %>"></div>

  <%= f.hidden_field :id if f.object.persisted? %>
  <%= f.hidden_field :_destroy, value: "0", data: { role: "destroy-flag" } %>
  <%= f.hidden_field :type, value: kind %>

  <%# ---- IMAGE PICKER + PREVIEW ---- %>
  <div data-controller="image-picker">
    <%# Hidden flag Rails reads to purge on save %>
    <%= f.hidden_field :remove_image, value: "0", data: { image_picker_target: "removeField" } %>

    <%# Top preview (like gameplay) with a red X overlay %>
    <%# app/views/questions/_fields.html.erb %>
    <% blob = f.object.image&.blob %>
    <div data-image-picker-target="preview"
         class="relative mb-3 overflow-hidden rounded-xl ring-1 ring-gray-200/70 <%= blob&.persisted? ? "" : "hidden" %>">
      <% if blob&.persisted? %>
        <%= image_tag blob,
              class: "block w-full max-h-48 sm:max-h-64 object-cover",
              loading: "lazy",
              decoding: "async",
              alt: "" %>
      <% end %>

      <!-- red close button -->
      <button type="button"
              data-action="image-picker#remove"
              class="absolute top-2 right-2 inline-flex h-10 w-10 sm:h-8 sm:w-8 items-center justify-center rounded-full bg-white/90 text-rose-600 shadow ring-1 ring-rose-200 hover:bg-white">
        <%= heroicon "folder-minus", variant: :outline, options: { class: "h-5 w-5 sm:h-4.5 sm:w-4.5" } %>
        <span class="sr-only">Remove image</span>
      </button>
    </div>

    <%# Hidden file input; we open it from the icon button %>
    <%= f.file_field :image,
          id: "q-#{q_index}-image",
          direct_upload: true,
          accept: "image/*",
          class: "sr-only",
          data: { image_picker_target: "input", action: "change->image-picker#change" } %>

    <%# ---- TOP ROW (content + buttons) ---- %>
    <div class="flex flex-col sm:flex-row sm:items-start gap-2.5 sm:gap-3">
      <span data-role="q-number"
            class="order-1 sm:order-none sm:mt-2 sm:w-6 sm:text-right text-sm sm:text-md font-semibold text-gray-500"></span>

      <%= f.text_field :content,
            placeholder: "Questionâ€¦",
            class: "order-2 w-full rounded-xl bg-white px-3 py-2.5 text-base sm:text-sm placeholder:text-gray-400 focus:outline-none" %>

      <div class="order-3 flex flex-wrap items-center gap-1.5 sm:gap-1.5 sm:shrink-0 sm:self-auto">
        <%# Add/Change image %>
        <button type="button"
                data-action="image-picker#pick"
                class="inline-flex h-10 w-10 sm:h-9 sm:w-9 items-center justify-center rounded-md border border-gray-200 bg-white text-gray-700 hover:bg-gray-50 focus:outline-none"
                title="Add / Change image" aria-label="Add / Change image">
          <%= heroicon "photo", variant: :outline, options: { class: "h-5 w-5 sm:h-4.5 sm:w-4.5" } %>
        </button>

        <%# ---- POINTS with gem INSIDE the input ---- %>
        <div class="relative">
          <span class="pointer-events-none absolute inset-y-0 left-2 inline-flex items-center text-yellow-500">ðŸ’Ž</span>
          <%= f.number_field :points,
                id: "question_points_#{f.index || 'new'}",
                min: 1,
                value: (f.object.points.presence || 1),
                inputmode: "numeric",
                class: "h-10 sm:h-9 w-24 sm:w-20 rounded-md border border-gray-200 bg-gray-50 pl-7 pr-2 text-center text-base sm:text-sm
                        focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500" %>
        </div>

        <%# Add option %>
        <button type="button"
                data-action="nested#addOption"
                class="inline-flex h-10 w-10 sm:h-9 sm:w-9 items-center justify-center rounded-md border border-gray-200 bg-white text-gray-700 hover:bg-gray-50 focus:outline-none"
                title="Add option" aria-label="Add option">
          <%= heroicon "chevron-double-down", variant: :outline, options: { class: "h-5 w-5 sm:h-4.5 sm:w-4.5" } %>
        </button>

        <%# Delete question %>
        <button type="button"
                data-action="nested#removeQuestion"
                class="inline-flex h-10 w-10 sm:h-9 sm:w-9 items-center justify-center rounded-md border border-gray-200 bg-white text-rose-600 hover:bg-rose-50 focus:outline-none"
                title="Remove question" aria-label="Remove question">
          <%= heroicon "trash", variant: :outline, options: { class: "h-5 w-5 sm:h-4.5 sm:w-4.5" } %>
        </button>
      </div>
    </div>
  </div>

  <!-- options -->
  <div class="mt-3 space-y-2" data-options-list>
    <% f.object.options.each_with_index do |option, j| %>
      <%= f.fields_for :options, option, child_index: j do |of| %>
        <%= render "options/fields", of: of, question_type: kind %>
      <% end %>
    <% end %>
  </div>

  <template data-option-template>
    <%= f.fields_for :options, Option.new, child_index: "NEW_OPT" do |of| %>
      <%= render "options/fields", of: of, question_type: kind %>
    <% end %>
  </template>
</div>
